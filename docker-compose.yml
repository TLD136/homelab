services:
  mariadb:
    restart: unless-stopped
    image: mariadb:latest
    command: --transaction-isolation=READ-COMMITTED --binlog-format=ROW --character-set-server=utf8
    volumes:
      - ./mariadb-storage:/var/lib/mysql
    networks:
      backend:
        ipv4_address: 172.1.0.2
    ports:
      - 3306:3306
    environment:
      - MYSQL_ROOT_PASSWORD=${MYSQL_ROOT_PASSWORD}
      - MYSQL_PASSWORD=${MYSQL_PASSWORD}
      - MYSQL_USER=${MYSQL_USER}
      - MYSQL_DATABASE=${MYSQL_DATABASE}

  nextcloud:
    restart: unless-stopped
    image: nextcloud:latest
    volumes:
      - ./nextcloud-storage:/var/www/html
    networks:
      frontend:
      backend:
        ipv4_address: 172.1.0.3
    environment:
      - MYSQL_DATABASE=${MYSQL_DATABASE}
      - MYSQL_USER=${MYSQL_USER}
      - MYSQL_PASSWORD=${MYSQL_PASSWORD}
      - MYSQL_HOST=${MYSQL_HOST}
      - REDIS_HOST=${VALKEY_HOST}
      - REDIS_HOST_PORT=${VALKEY_HOST_PORT}
      - VALKEY_HOST_PASSWORD=${VALKEY_HOST_PASSWORD}
    depends_on:
      - mariadb
      - valkey

  gitlab:
    restart: unless-stopped
    image: gitlab/gitlab-ce:latest
    volumes:
      - ./gitlab-storage/config:/etc/gitlab
      - ./gitlab-storage/logs:/var/log/gitlab
      - ./gitlab-storage/data:/var/opt/gitlab
    networks:
      frontend:
      backend:
        ipv4_address: 172.1.0.4
    ports:
      - "2222:22"

  homepage:
    restart: unless-stopped
    image: ghcr.io/gethomepage/homepage:latest
    volumes:
      - ./homepage-storage:/app/config
      - /var/run/docker.sock:/var/run/docker.sock:ro
    networks:
      frontend:
      backend:
        ipv4_address: 172.1.0.5
    environment:
      - HOMEPAGE_ALLOWED_HOSTS=homepage.tld136.duckdns.org

  nginxproxymanager:
    restart: unless-stopped
    image: jc21/nginx-proxy-manager:latest
    volumes:
      - ./nginxproxymanager-storage:/data
      - ./letsencrypt-storage:/etc/letsencrypt
    networks:
      frontend:
      backend:
        ipv4_address: 172.1.0.6
    ports:
      - 80:80
      - 81:81
      - 443:443

  portainer:
    restart: unless-stopped
    image: portainer/portainer-ce:alpine
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock
      - ./portainer-storage:/data
    networks:
      backend:
        ipv4_address: 172.1.0.7

  gitlab-runner:
    restart: unless-stopped
    image: gitlab/gitlab-runner:latest
    networks:
      frontend:
    volumes:
      - ./gitlab-storage/runner-config:/etc/gitlab-runner
      - ./gitlab-storage/runner-cache:/home/gitlab-runner
      - /var/run/docker.sock:/var/run/docker.sock

  valkey:
    restart: unless-stopped
    image: valkey/valkey:alpine
    volumes:
      - ./valkey-storage/data:/data
      - ./valkey-storage/config:/etc/valkey/
    networks:
      backend:
        ipv4_address: 172.1.0.8
    ports:
      - 6379:6379
    environment:
      - VALKEY_PASSWORD=${VALKEY_HOST_PASSWORD}

  syncthing:
    restart: unless-stopped
    image: syncthing/syncthing:latest
    volumes:
      - './syncthing-storage:/var/syncthing'
    network_mode: host
    #ports:
    #  - 8384:8384 # Web UI
    #     - 22000:22000/tcp # TCP file transfers
    #     - 22000:22000/udp # QUIC file transfers
    #     - 21027:21027/udp # Receive local discovery broadcasts

  pihole:
    restart: unless-stopped
    image: pihole/pihole:latest
    environment:
      - TZ=Europe/Amsterdam
      - WEBPASSWORD=${PIHOLE_PASSWORD}
    volumes:
      - './pihole-storage/etc-pihole:/etc/pihole'
      - './pihole-storage/etc-dnsmasq.d:/etc/dnsmasq.d'
      #   https://github.com/pi-hole/docker-pi-hole#note-on-capabilities
    cap_add:
      # - NET_ADMIN # Required if you are using Pi-hole as your DHCP server, else not needed
      - SYS_TIME # NTP client
      - SYS_NICE # for higher priority
    networks:
      frontend:
    ports:
      - "53:53/tcp"
      - "53:53/udp"
      # - "67:67/udp" # Only required if you are using Pi-hole as your DHCP server
      # - "8080:80/tcp"a
    labels:
      - "com.centurylinklabs.watchtower.enable=false"

  watchtower:
    restart: unless-stopped
    image: containrrr/watchtower:latest
    environment:
      - TZ=Europe/Amsterdam
      - WATCHTOWER_CLEANUP=true
      - WATCHTOWER_SCHEDULE=0 0 12 * * *
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock
    networks:
      frontend:


networks:
  frontend:
    driver: bridge

  backend:
    attachable: true
    internal: true
    ipam:
      config:
        - subnet: 172.1.0.0/24
          gateway: 172.1.0.1
